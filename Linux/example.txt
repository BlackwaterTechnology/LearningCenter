抑制后端ARP
echo "1" > /proc/sys/net/ipv4/conf/lo/arp_ignore
echo "2" > /proc/sys/net/ipv4/conf/lo/arp_announce
echo "1" > /proc/sys/net/ipv4/conf/all/arp_ignore
echo "2" > /proc/sys/net/ipv4/conf/all/arp_announce

arp_ignore:定义对目标地址为本地IP的ARP询问不同的应答模式： 
0 - (默认值): 回应任何网络接口上对任何本地IP地址的arp查询请求 
1 -只回答目标IP地址是来访网络接口本地地址的ARP查询请求 
2 -只回答目标IP地址是来访网络接口本地地址的ARP查询请求,且来访IP必须在该网络接口的子网段内 
3 - 不回应该网络界面的arp请求，而只对设置的唯一和连接地址做出回应 
4-7 - 保留未使用 
8 -不回应所有（本地地址）的arp查询

IPVS已实现了以下十种调度算法：
轮叫调度（Round-Robin Scheduling）
加权轮叫调度（Weighted Round-Robin Scheduling）
最小连接调度（Least-Connection Scheduling）
加权最小连接调度（Weighted Least-Connection Scheduling）
基于局部性的最少链接（Locality-Based Least Connections Scheduling）
带复制的基于局部性最少链接（Locality-Based Least Connections with Replication Scheduling）
目标地址散列调度（Destination Hashing Scheduling）
源地址散列调度（Source Hashing Scheduling）
最短预期延时调度（Shortest Expected Delay Scheduling）
不排队调度（Never Queue Scheduling）

列子：
global_defs {
   router_id vs_1
   vrrp_skip_check_adv_addr
   vrrp_garp_interval 0 #在一个接口上发送的无偿 ARP 消息之间的 ms 延迟
   vrrp_gna_interval 0
}

vrrp_instance vs {
    state MASTER
    interface eth0
    virtual_router_id 51
    priority 100
    advert_int 1
    authentication {
        auth_type PASS
        auth_pass 1111
    }
    virtual_ipaddress {
        172.19.6.10
    }
}
virtual_server 172.19.6.10 80 {
    delay_loop 3
    lb_algo rr
    lb_kind DR
    persistence_timeout 50
    protocol TCP
    real_server 172.19.6.57 80 {
        weight 1
        TCP_CHECK {
        connect_timeout 1
        nb_get_retry 1
        delay_before_retry 1
        connect_port 80
        }
     }
    real_server 172.19.6.58 80 {
        weight 1
        TCP_CHECK {
        connect_timeout 1
        nb_get_retry 1
        delay_before_retry 1
        connect_port 80
        }
        }
}



