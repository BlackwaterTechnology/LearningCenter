# Description
# <带上我的名字和我畅快的聊天，列如“hobo,今晚我请你吃饭！”>
#
# Dependencies:
# "<module name>": "<module version>"
#
# Configuration:
# LIST_OF_ENV_VARS_TO_SET
#
# Commands:
# hubot <trigger> - <what the respond trigger does>
# <trigger> - <what the hear trigger does>
#
# URLS:
# GET /path?param=<val> - <what the request does>
#
# Notes:
# <optional notes required for the script>
#
# Author:
# <github username of the original script author>
getsolution = `function(text, msg){
var http = require('http');
var querystring = require('querystring');
//json转换为字符串
var data = querystring.stringify({
    'cmd':"chat",
    'appid':"f64bb9acedce3b525169c7ed03cf1d2f",
    'userid':"05A5FEA6B92C9852C5EA9D4B348079869",
    'text':text,
    'location':""
    });
var options = {
    host: 'idc.emotibot.com',
    port:'80',
    path:'/api/ApiKey/openapi.php',
    method: 'POST',
    headers: {
        'content-Type':'application/x-www-form-urlencoded',
    }
};
var requestData = 111;
var req = http.request(options, function(res) {
    res.setEncoding('utf8');
    res.on('data', function (chunk){
        onetimetoken_data = JSON.parse(chunk);
        var solution;
        for (i=0;i<onetimetoken_data.data.length;i++)
        {
        //msg.send(onetimetoken_data.data[i].value + '测试‘);
        msg.send(onetimetoken_data.data[i].value);
        }
    });
});
req.write(data);
req.end();
return requestData;
}`
module.exports = (robot) ->
#    robot.respond /jump/i, (msg) ->
#
    robot.hear /hobo( |,)(.*)/i, (msg) ->
        usermsg = msg.match[2]
        requestData = getsolution usermsg,msg
